name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Set up Docker
      uses: actions/setup-docker@v2
    - name: Log in to Docker Hub (or your container registry)
      run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Build Docker Image
      run: docker build -t nginx
    - name: Push Docker Image
      run: docker push nginx
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Install kubectl
      uses: setup-kubectl@v1
      with:
        version: 'latest'
    - name: Deploy to Kubernetes
      run: kubectl apply -f /home/ubuntu/myrepository/
  deploy-to-ec2:
     runs-on: ubuntu-latest
     steps:
     - name: Copy Kubernetes Manifests to EC2
       uses: appleboy/scp-action@master
       with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: 'https://github.com/elumalai-n/myrepository/deployment.yaml'
        target: '/home/ubuntu/myrespository/'

     - name: SSH into EC2 and Apply Kubernetes Manifests
       uses: appleboy/ssh-action@master
       with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo apt-get update
          sudo apt-get install -y apt-transport-https gnupg
          sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
          echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y kubectl
          sudo mv kubectl /usr/local/bin
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /bin/kind
          sudo kind create cluster
          sudo kind create cluster --name=mycluster
          sudo kubectl get nodes
          cd /home/ubuntu/myrepository/
          kubectl apply -f deployment.yaml

